#Za O3
#Razdelimo na ucno in testno, 70:30
set.seed(12345)
sel <- sample(1:nrow(md), size=as.integer(nrow(md) * 0.7), replace=F)
learn <- md[sel,]
test <- md[-sel,]
setwd('C:/Users/Uporabnik/Documents/Faks/2.letnik/Umetna_inteligenca/Seminarska_naloga/')
source("funkcije.R")
library(pROC)
library(lubridate)
#Pripravimo podatke, diskretizacija
md <- read.table(file="podatkiSem1.txt", sep=",", header=TRUE)
md$Mesec<-factor(month(md$Datum))
md$Predviden_O3[1] <- md$O3[1]
md$Predviden_PM10[1] <- md$PM10[1]
md$Predviden_PM10[2] <- md$PM10[2]
md$Predviden_O3[2] <- md$O3[2]
md$Predviden_O3[3] <- (md$O3[3-1] + md$O3[3-2])/2
md$Predviden_PM10[3] <- (md$PM10[3-1] + md$PM10[3-2])/2
for(i in 1:nrow(md))
{
if(i > 3){
md$Predviden_O3[i] <- (md$O3[i-1] + md$O3[i-2] + md$O3[i-3])/3
md$Predviden_PM10[i] <- (md$PM10[i-1] + md$PM10[i-2] + md$PM10[i-3])/3
}
}
md$PM10 <- cut(md$PM10, breaks=c(min(md$PM10), 35.0, max(md$PM10)), labels=c("NIZKA", "VISOKA"), include.lowest = TRUE)
md$O3 <- cut(md$O3, breaks=c(min(md$O3), 60.0, 120.0, 180.0, max(md$O3)), labels=c("NIZKA", "SREDNJA", "VISOKA", "EKSTREMNA"), include.lowest = TRUE)
rezultati <- data.frame("CA" = 0:1, "Brier" = 0:1, "Klasifikator" = c("Odlocitveno drevo", "CORE LEARN drevo", "Bayes", "CORE bayes","KNN","Nakljucni gozd", "CORE MODEL", "E1071", "KERN LAB", "Nevrosnka mreza" ))
summary(md)
write.table(md, "podatkiDodaniAtributi.txt", sep = ",")
#Za O3
#Razdelimo na ucno in testno, 70:30
set.seed(12345)
sel <- sample(1:nrow(md), size=as.integer(nrow(md) * 0.7), replace=F)
learn <- md[sel,]
test <- md[-sel,]
learn$Datum <- NULL
learn$PM10 <- NULL
learn$Predviden_PM10 <- NULL
test$Datum <- NULL
test$PM10 <- NULL
test$Predviden_PM10 <- NULL
observed <- test$O3
obsMat <- model.matrix(~O3-1, test)
#Metoda precnega preverjanja je implementirana v knjiznici "ipred"
library(ipred)
#Pomozne funkcije, ki jih potrebujemo za izvedbo precnega preverjanja
mypredict.generic <- function(object, newdata){predict(object, newdata, type = "class")}
mymodel.coremodel <- function(formula, data, target.model){CoreModel(formula, data, model=target.model)}
mypredict.coremodel <- function(object, newdata) {pred <- predict(object, newdata)$class; destroyModels(object); pred}
#ODLOCITVENO DREVO
#Gradnja modela s pomocjo knjiznice "rpart"
library(rpart)
dt <- rpart(O3 ~ ., data = learn)
#plot(dt);text(dt)
predicted <- predict(dt, test, type="class")
predMat <- predict(dt, test, type = "prob")
rezultati[1,1] <- CA(observed, predicted)
rezultati[1,2] <- brier.score(obsMat, predMat)
#Gradnja modela s pomocjo knjiznice "CORElearn"
#Napise da Glob_sevanje_min ima vse values enake in je skippan, zato ga lahko odstranimo?
#learn$Glob_sevanje_min <- NULL
library(CORElearn)
#FUNKCIJE
# Funkcija za izracun klasifikacijske tocnosti
CA <- function(observed, predicted)
{
t <- table(observed, predicted)
sum(diag(t)) / sum(t)
}
# Funkcija za izracun Brierjeve mere
brier.score <- function(observedMatrix, predictedMatrix)
{
sum((observedMatrix - predictedMatrix) ^ 2) / nrow(predictedMatrix)
}
#METODE ZA OCENJEVANJE UCENJA V REGRESIJI
mae <- function(observed, predicted)
{
mean(abs(observed - predicted))
}
rmae <- function(observed, predicted, mean.val)
{
sum(abs(observed - predicted)) / sum(abs(observed - mean.val))
}
mse <- function(observed, predicted)
{
mean((observed - predicted)^2)
}
rmse <- function(observed, predicted, mean.val)
{
sum((observed - predicted)^2)/sum((observed - mean.val)^2)
}
setwd("C:\\Users\\Matic\\Desktop\\Faks\\2. letnik\\UI\\domaca_naloga\\")
md <- read.table(file="podatkiSem1.txt", sep=",", header=TRUE)
setwd('C:/Users/Uporabnik/Documents/Faks/2.letnik/Umetna_inteligenca/Seminarska_naloga/')
md <- read.table(file="podatkiSem1.txt", sep=",", header=TRUE)
md$PM10 <- cut(md$PM10, breaks=c(min(md$PM10), 35.0, max(md$PM10)), labels=c("NIZKA", "VISOKA"), include.lowest = TRUE)
md$O3 <- cut(md$O3, breaks=c(min(md$O3), 60.0, 120.0, 180.0, max(md$O3)), labels=c("NIZKA", "SREDNJA", "VISOKA", "EKSTREMNA"), include.lowest = TRUE)
#VECINSKI KLASIFIKATOR
#Mnozico razdelimo na ucno in testno, v razmerju 70:30
set.seed(12345)
sel_PM10 <- sample(1:nrow(md), size=as.integer(nrow(md) * 0.7), replace=F)
sel_O3 <- sample(1:nrow(md), size=as.integer(nrow(md) * 0.7), replace=F)
train_PM10 <- md[sel_PM10,]
test_PM10 <- md[-sel_PM10,]
train_O3 <- md[sel_O3,]
test_O3 <- md[-sel_O3,]
table(train_PM10$PM10)
table(train_O3$O3)
tocnost_vecinskega_klasifikatorja_PM10 <- sum(test_PM10$PM10 == "NIZKA") / length(test_PM10$PM10)
tocnost_vecinskega_klasifikatorja_PM10
tocnost_vecinskega_klasifikatorja_O3 <- sum(test_O3$O3 == "SREDNJA") / length(test_O3$O3)
tocnost_vecinskega_klasifikatorja_O3
#ODLOCITVENA DREVESA
library(rpart)
#Zgradimo odlocitveno drevo
#Odstranimo datum
train_PM10$Datum <- NULL
train_PM10$O3 <- NULL
train_O3$Datum <- NULL
train_O3$PM10 <- NULL
dt_PM10 <- rpart(PM10 ~ ., data = train_PM10)
dt_O3 <- rpart(O3 ~ ., data = train_O3)
#Narisemo drevo
plot(dt_PM10)
text(dt_PM10, pretty = 0)
plot(dt_O3)
#Narisemo drevo
plot(dt_PM10)
text(dt_PM10, pretty = 0)
